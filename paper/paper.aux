\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand*\HyPL@Entry[1]{}
\providecommand\babel@aux[2]{}
\@nameuse{bbl@beforestart}
\citation{pattern_recognition,review_image_rec,speech_rec}
\citation{ai_tech1}
\citation{energy_cost_ml1,energy_cost_ml2}
\citation{trainingphysicalneuralnetworks,backporp_pnn}
\citation{optics1}
\citation{electronics1}
\citation{acoustic1}
\citation{mechanics1}
\citation{backporp_pnn}
\citation{supervised_learning}
\citation{demonstr_coupled_learning}
\citation{}
\citation{Rene_IonicNeuromorphic}
\HyPL@Entry{0<</P(\376\377\0001)>>}
\newlabel{FirstPage}{{}{1}{}{section*.1}{}}
\newlabel{FirstPage@cref}{{}{[1][1][]1}}
\@writefile{toc}{\contentsline {title}{Efficient Machine Learning in a Memristor Network}{1}{section*.2}\protected@file@percent }
\@writefile{toc}{\contentsline {abstract}{Abstract}{1}{section*.1}\protected@file@percent }
\newlabel{sec:Intro}{{I}{1}{}{section*.3}{}}
\newlabel{sec:Intro@cref}{{[section][1][]I}{[1][1][]1}}
\@writefile{toc}{\contentsline {section}{\numberline {I}Introduction}{1}{section*.3}\protected@file@percent }
\citation{Rene_IonicNeuromorphic}
\citation{Rene_PressureSensitive}
\citation{Rene_IonicNeuromorphic}
\citation{Rene_IonicNeuromorphic}
\HyPL@Entry{1<</P(\376\377\0002)>>}
\newlabel{sec:memristor_network}{{II}{2}{}{section*.4}{}}
\newlabel{sec:memristor_network@cref}{{[section][2][]II}{[1][2][]2}}
\@writefile{toc}{\contentsline {section}{\numberline {II}Memristor Network}{2}{section*.4}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces A schematic representation of the conical fluidic memristor. A cone of lenght $L$, base radius $R_b$ and tip radius $R_t$ with charged surface connnects two bulk reservoirs of a 1:1 electrolyte in an acqueous solution. The bulk density in the base $\rho _b$ differs from the bulk density in the tip $\rho _t$. At the far side of the memristor, an electrical potential and pressure drop are applied. Overall, this results in a chemical, electrical and mechanical sensistive system.}}{2}{figure.1}\protected@file@percent }
\newlabel{fig:memristor_scheme}{{1}{2}{A schematic representation of the conical fluidic memristor. A cone of lenght $L$, base radius $R_b$ and tip radius $R_t$ with charged surface connnects two bulk reservoirs of a 1:1 electrolyte in an acqueous solution. The bulk density in the base $\rho _b$ differs from the bulk density in the tip $\rho _t$. At the far side of the memristor, an electrical potential and pressure drop are applied. Overall, this results in a chemical, electrical and mechanical sensistive system}{figure.1}{}}
\newlabel{fig:memristor_scheme@cref}{{[figure][1][]1}{[1][2][]2}}
\newlabel{eq:rho_average}{{1}{2}{}{equation.2.1}{}}
\newlabel{eq:rho_average@cref}{{[equation][1][]1}{[1][2][]2}}
\newlabel{eq:eqofmotconductance}{{2}{2}{}{equation.2.2}{}}
\newlabel{eq:eqofmotconductance@cref}{{[equation][2][]2}{[1][2][]2}}
\citation{}
\HyPL@Entry{2<</P(\376\377\0003)>>}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces An example of a network of five nodes connected by six memristors. The nodes are divided in input nodes (green circles), hidden nodes (gray nodes) and output nodes (purple circles) each of them is characterized by a triplet of physical quantities, representing the potential, pressure, and density. Th resulting stimuli on the memristor is given by the difference between base and tip signal, it thus depends on the oreintation of the memristor. In the case of the memristor that connects the first and the second node, for example, the exteranl stimuli are $\Delta V = V_2 - V_1$, $\Delta P = P_2 - P_1$ and $\Delta \rho = \rho _2 - \rho _1$. The zig-zag lines directed towards the input nodes indicate where the electrical signal is applied, while the zig-zag lines pointing outwards from the nodes indicate where the electrical signal is measured.}}{3}{figure.2}\protected@file@percent }
\newlabel{fig:memristor_network}{{2}{3}{An example of a network of five nodes connected by six memristors. The nodes are divided in input nodes (green circles), hidden nodes (gray nodes) and output nodes (purple circles) each of them is characterized by a triplet of physical quantities, representing the potential, pressure, and density. Th resulting stimuli on the memristor is given by the difference between base and tip signal, it thus depends on the oreintation of the memristor. In the case of the memristor that connects the first and the second node, for example, the exteranl stimuli are $\Delta V = V_2 - V_1$, $\Delta P = P_2 - P_1$ and $\Delta \rho = \rho _2 - \rho _1$. The zig-zag lines directed towards the input nodes indicate where the electrical signal is applied, while the zig-zag lines pointing outwards from the nodes indicate where the electrical signal is measured}{figure.2}{}}
\newlabel{fig:memristor_network@cref}{{[figure][2][]2}{[1][3][]3}}
\newlabel{sec:training}{{III}{3}{}{section*.5}{}}
\newlabel{sec:training@cref}{{[section][3][]III}{[1][3][]3}}
\@writefile{toc}{\contentsline {section}{\numberline {III}Training Algorithm for a Memristor Network}{3}{section*.5}\protected@file@percent }
\citation{steepest_descent_book}
\HyPL@Entry{3<</P(\376\377\0004)>>}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces (a) Memristor network with weights defined in the nodes. (b) Memristor network where wegiths characterize each edge.}}{4}{figure.3}\protected@file@percent }
\newlabel{fig:two_types_weights}{{3}{4}{(a) Memristor network with weights defined in the nodes. (b) Memristor network where wegiths characterize each edge}{figure.3}{}}
\newlabel{fig:two_types_weights@cref}{{[figure][3][]3}{[1][3][]4}}
\newlabel{eq:cost_func}{{III}{4}{}{figure.4}{}}
\newlabel{eq:cost_func@cref}{{[section][3][]III}{[1][4][]4}}
\newlabel{eq:weight_update}{{4}{4}{}{equation.3.4}{}}
\newlabel{eq:weight_update@cref}{{[equation][4][]4}{[1][4][]4}}
\newlabel{eq:gradient_cost_func}{{5}{4}{}{equation.3.5}{}}
\newlabel{eq:gradient_cost_func@cref}{{[equation][5][]5}{[1][4][]4}}
\newlabel{sec:train_memr_vd}{{III\,A}{4}{}{section*.6}{}}
\newlabel{sec:train_memr_vd@cref}{{[subsection][1][3]III\,A}{[1][4][]4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {A}Training a Memristor Voltage Divider}{4}{section*.6}\protected@file@percent }
\citation{voltage_controlled_oscillator,onchip_powerdistributed}
\HyPL@Entry{4<</P(\376\377\0005)>>}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces Scheme representing the two phases of the training algorithm, they are iteraitvely performed for a selected number of training steps.}}{5}{figure.4}\protected@file@percent }
\newlabel{fig:training_scheme}{{4}{5}{Scheme representing the two phases of the training algorithm, they are iteraitvely performed for a selected number of training steps}{figure.4}{}}
\newlabel{fig:training_scheme@cref}{{[figure][4][]4}{[1][4][]5}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces }}{5}{figure.5}\protected@file@percent }
\newlabel{fig:vd_scheme}{{5}{5}{}{figure.5}{}}
\newlabel{fig:vd_scheme@cref}{{[figure][5][]5}{[1][4][]5}}
\newlabel{sec:train_memr_nw}{{III\,B}{5}{}{section*.7}{}}
\newlabel{sec:train_memr_nw@cref}{{[subsection][2][3]III\,B}{[1][5][]5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {B}Training a memristor network}{5}{section*.7}\protected@file@percent }
\HyPL@Entry{5<</P(\376\377\0006)>>}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces (a) Behaviour of the cost function during the training of the voltage divider. Different colors indicate that the training is done with a specific choise of training weights, as indiacted in the legend. (b) Pressures imposed on the three nodes of the voltage divider during training. The inset shows the relaxation to the steady state of the output voltage $V_2$ to the desired value $V_D$ when the pressures imposed are the values obtained in the last training step, and the input nodes are stimulated with fixed voltage. (c) Ion concentration desnities imposed on the three nodes of the voltage divider during training. (d) Length of the memristors during training. (e) Base radius of the memristors during training.}}{6}{figure.6}\protected@file@percent }
\newlabel{fig:mse_weights_vd}{{6}{6}{(a) Behaviour of the cost function during the training of the voltage divider. Different colors indicate that the training is done with a specific choise of training weights, as indiacted in the legend. (b) Pressures imposed on the three nodes of the voltage divider during training. The inset shows the relaxation to the steady state of the output voltage $V_2$ to the desired value $V_D$ when the pressures imposed are the values obtained in the last training step, and the input nodes are stimulated with fixed voltage. (c) Ion concentration desnities imposed on the three nodes of the voltage divider during training. (d) Length of the memristors during training. (e) Base radius of the memristors during training}{figure.6}{}}
\newlabel{fig:mse_weights_vd@cref}{{[figure][6][]6}{[1][5][]6}}
\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces (a) The trainiang of a memristor voltage divider to a set of desired voltage outputs $V_D = {1V, 3V, 4V}$, indicated by dashed light purple lines. The output voltage $V_2$, indicated by dark purple dots, adapts to the desired output during the training. The input voltages $V_1$ and $V_3$ are constant at $5V$ and $0V$ respectively. (b) The dots with different shades of gray show the values of pressures, chosen as weights, imposed on the three nodes during training.}}{6}{figure.7}\protected@file@percent }
\newlabel{fig:evolution_targets}{{7}{6}{(a) The trainiang of a memristor voltage divider to a set of desired voltage outputs $V_D = {1V, 3V, 4V}$, indicated by dashed light purple lines. The output voltage $V_2$, indicated by dark purple dots, adapts to the desired output during the training. The input voltages $V_1$ and $V_3$ are constant at $5V$ and $0V$ respectively. (b) The dots with different shades of gray show the values of pressures, chosen as weights, imposed on the three nodes during training}{figure.7}{}}
\newlabel{fig:evolution_targets@cref}{{[figure][7][]7}{[1][5][]6}}
\newlabel{sec:linear_regression}{{III\,C}{6}{}{section*.8}{}}
\newlabel{sec:linear_regression@cref}{{[subsection][3][3]III\,C}{[1][5][]6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {C}Linear Regression}{6}{section*.8}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {8}{\ignorespaces (a) Generic network with $9$ nodes and $15$ edges with inputs $[V_{2}, V_{4}, V_{9}] = [0V, 2V, 5V]$ and desired outputs $[V_{5}^D, V_{7}^D] = [3V, 4V]$, delta weights a third of their intial value and learning rates $[0.001, 1, 0.0001, 0.001]$. (b) Cost funtion during training of generic graph for input-output mapping task. The different colors indicate different weight choice.}}{6}{figure.8}\protected@file@percent }
\newlabel{fig:mse_general}{{8}{6}{(a) Generic network with $9$ nodes and $15$ edges with inputs $[V_{2}, V_{4}, V_{9}] = [0V, 2V, 5V]$ and desired outputs $[V_{5}^D, V_{7}^D] = [3V, 4V]$, delta weights a third of their intial value and learning rates $[0.001, 1, 0.0001, 0.001]$. (b) Cost funtion during training of generic graph for input-output mapping task. The different colors indicate different weight choice}{figure.8}{}}
\newlabel{fig:mse_general@cref}{{[figure][8][]8}{[1][5][]6}}
\newlabel{eq:linear_relationship}{{6}{6}{}{equation.3.6}{}}
\newlabel{eq:linear_relationship@cref}{{[equation][6][]6}{[1][6][]6}}
\HyPL@Entry{6<</P(\376\377\0007)>>}
\@writefile{lof}{\contentsline {figure}{\numberline {9}{\ignorespaces }}{7}{figure.9}\protected@file@percent }
\newlabel{fig:lin_regr1}{{9}{7}{}{figure.9}{}}
\newlabel{fig:lin_regr1@cref}{{[figure][9][]9}{[1][7][]7}}
\@writefile{lof}{\contentsline {figure}{\numberline {10}{\ignorespaces }}{7}{figure.10}\protected@file@percent }
\newlabel{fig:lin_regr2}{{10}{7}{}{figure.10}{}}
\newlabel{fig:lin_regr2@cref}{{[figure][10][]10}{[1][7][]7}}
\citation{big_neuralnet1,big_neuralnet2}
\HyPL@Entry{7<</P(\376\377\0008)>>}
\@writefile{toc}{\contentsline {section}{\numberline {IV}Conclusions}{8}{section*.9}\protected@file@percent }
\HyPL@Entry{8<</P(\376\377\0009)>>}
\@writefile{toc}{\appendix }
\newlabel{app:dyn_evol_steady_state}{{A}{9}{}{section*.10}{}}
\newlabel{app:dyn_evol_steady_state@cref}{{[appendix][1][2147483647]A}{[1][9][]9}}
\@writefile{toc}{\contentsline {section}{\numberline {A}Dynamical evolution to the steady state }{9}{section*.10}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {11}{\ignorespaces Schematical representation of a memristor voltage divider. Two memristors, \( M_1 \) and \( M_2 \), connect two input nodes (green dots) with fixed voltages of \( 0\,\mathrm  {V} \) and \( 5\,\mathrm  {V} \), respectively, to a single output node (purple dot). Each memristor is subject to one external stimulus: the electric potential difference between the nodes it connects. }}{9}{figure.11}\protected@file@percent }
\newlabel{fig:app_vd}{{11}{9}{Schematical representation of a memristor voltage divider. Two memristors, \( M_1 \) and \( M_2 \), connect two input nodes (green dots) with fixed voltages of \( 0\,\mathrm {V} \) and \( 5\,\mathrm {V} \), respectively, to a single output node (purple dot). Each memristor is subject to one external stimulus: the electric potential difference between the nodes it connects}{figure.11}{}}
\newlabel{fig:app_vd@cref}{{[figure][11][2147483647]11}{[1][9][]9}}
\newlabel{eq:conduct}{{A1}{9}{}{equation.A.1}{}}
\newlabel{eq:conduct@cref}{{[equation][1][2147483647,1]A1}{[1][9][]9}}
\newlabel{eq:potentials}{{A2}{9}{}{equation.A.2}{}}
\newlabel{eq:potentials@cref}{{[equation][2][2147483647,1]A2}{[1][9][]9}}
\newlabel{alg:relaxation}{{A}{9}{}{equation.A.2}{}}
\newlabel{alg:relaxation@cref}{{[appendix][1][2147483647]A}{[1][9][]9}}
\@writefile{loa}{\contentsline {algorithm}{\numberline {1}{\ignorespaces Relaxation of a Memristor Voltage Divider to Steady State}}{9}{algorithm.1}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {12}{\ignorespaces Relaxation toward the steady state of a memristor voltage divider when both memristors have the same length. (a) Steady-state conductance function of memristor $\text  {m}_1$ (light green solid line) and memristor $\text  {m}_2$ (light blue solid line). The steady-state conductance values reached upon convergence of \cref  {eq:conduct} are indicated by a triangular marker for $\text  {m}_1$ and a circular marker for $\text  {m}_2$. (b) Time evolution of the conductance of memristor $\text  {m}_1$ (green) and $\text  {m}_2$ (light blue) during relaxation toward the steady state. The final conductance values are indicated by the same triangular and circular markers as in (a). (c) Voltages at the input nodes (green lines) and potential drops across the two memristors (light pink and purple lines) during relaxation. }}{9}{figure.12}\protected@file@percent }
\newlabel{fig:equal_memr}{{12}{9}{Relaxation toward the steady state of a memristor voltage divider when both memristors have the same length. (a) Steady-state conductance function of memristor $\m _1$ (light green solid line) and memristor $\m _2$ (light blue solid line). The steady-state conductance values reached upon convergence of \cref {eq:conduct} are indicated by a triangular marker for $\m _1$ and a circular marker for $\m _2$. (b) Time evolution of the conductance of memristor $\m _1$ (green) and $\m _2$ (light blue) during relaxation toward the steady state. The final conductance values are indicated by the same triangular and circular markers as in (a). (c) Voltages at the input nodes (green lines) and potential drops across the two memristors (light pink and purple lines) during relaxation}{figure.12}{}}
\newlabel{fig:equal_memr@cref}{{[figure][12][2147483647]12}{[1][9][]9}}
\bibdata{paperNotes,biblio}
\HyPL@Entry{9<</P(\376\377\0001\0000)>>}
\@writefile{lof}{\contentsline {figure}{\numberline {13}{\ignorespaces Relaxation toward the steady state of a memristor voltage divider, where the memristor lengths have been set by a training algorithm with the objective of producing $V_2 = 4\,\mathrm  {V}$. (a) Steady-state conductance functions of memristor $\text  {m}_1$ (light green solid line) and memristor $\text  {m}_2$ (light blue solid line). The conductance values reached upon convergence of \cref  {eq:conduct} are indicated by a triangular marker for $\text  {m}_1$ and a circular marker for $\text  {m}_2$. (b) Time evolution of the conductance of memristor $\text  {m}_1$ (green) and $\text  {m}_2$ (light blue) during relaxation toward the steady state. Final conductance values are indicated by the same markers as in (a). (c) Voltages at the input nodes (green lines) and potential drops across the two memristors (light pink and purple lines) during relaxation. The potential drops reflect the trained voltage output at the middle node. }}{10}{figure.13}\protected@file@percent }
\newlabel{fig:trained_memr}{{13}{10}{Relaxation toward the steady state of a memristor voltage divider, where the memristor lengths have been set by a training algorithm with the objective of producing $V_2 = 4\,\mathrm {V}$. (a) Steady-state conductance functions of memristor $\m _1$ (light green solid line) and memristor $\m _2$ (light blue solid line). The conductance values reached upon convergence of \cref {eq:conduct} are indicated by a triangular marker for $\m _1$ and a circular marker for $\m _2$. (b) Time evolution of the conductance of memristor $\m _1$ (green) and $\m _2$ (light blue) during relaxation toward the steady state. Final conductance values are indicated by the same markers as in (a). (c) Voltages at the input nodes (green lines) and potential drops across the two memristors (light pink and purple lines) during relaxation. The potential drops reflect the trained voltage output at the middle node}{figure.13}{}}
\newlabel{fig:trained_memr@cref}{{[figure][13][2147483647]13}{[1][10][]10}}
\@writefile{lof}{\contentsline {figure}{\numberline {14}{\ignorespaces Relaxation toward the steady state of a memristor voltage divider. The steady-state function of $\text  {m}_1$ is artificially modified to a sine curve that passes through the final conductance and potential drop point of the trained network (red cross), while the steady-state function of $\text  {m}_2$ is kept identical to that of the trained system. (a) Steady-state conductance functions of memristor $\text  {m}_1$ (light green solid line) and memristor $\text  {m}_2$ (light blue solid line). The conductance values reached upon convergence of \cref  {eq:conduct} are indicated by a triangular marker for $\text  {m}_1$ and a circular marker for $\text  {m}_2$. (b) Time evolution of the conductance of memristor $\text  {m}_1$ (green) and $\text  {m}_2$ (light blue) during relaxation toward the steady state. Final conductance values are marked as in (a). (c) Voltages at the input nodes (green lines) and potential drops across the two memristors (light pink and purple lines) during relaxation. Due to the altered functional form of the steady-state conductance of $\text  {m}_1$, the evolution deviates from the desired one. }}{10}{figure.14}\protected@file@percent }
\newlabel{fig:changed_func_ginfty}{{14}{10}{Relaxation toward the steady state of a memristor voltage divider. The steady-state function of $\m _1$ is artificially modified to a sine curve that passes through the final conductance and potential drop point of the trained network (red cross), while the steady-state function of $\m _2$ is kept identical to that of the trained system. (a) Steady-state conductance functions of memristor $\m _1$ (light green solid line) and memristor $\m _2$ (light blue solid line). The conductance values reached upon convergence of \cref {eq:conduct} are indicated by a triangular marker for $\m _1$ and a circular marker for $\m _2$. (b) Time evolution of the conductance of memristor $\m _1$ (green) and $\m _2$ (light blue) during relaxation toward the steady state. Final conductance values are marked as in (a). (c) Voltages at the input nodes (green lines) and potential drops across the two memristors (light pink and purple lines) during relaxation. Due to the altered functional form of the steady-state conductance of $\m _1$, the evolution deviates from the desired one}{figure.14}{}}
\newlabel{fig:changed_func_ginfty@cref}{{[figure][14][2147483647]14}{[1][10][]10}}
\bibcite{pattern_recognition}{{1}{}{{}}{{}}}
\bibcite{review_image_rec}{{2}{}{{}}{{}}}
\bibcite{speech_rec}{{3}{}{{}}{{}}}
\bibcite{ai_tech1}{{4}{}{{}}{{}}}
\bibcite{energy_cost_ml1}{{5}{}{{}}{{}}}
\bibcite{energy_cost_ml2}{{6}{}{{}}{{}}}
\bibcite{trainingphysicalneuralnetworks}{{7}{}{{}}{{}}}
\bibcite{backporp_pnn}{{8}{}{{}}{{}}}
\bibcite{optics1}{{9}{}{{}}{{}}}
\bibcite{electronics1}{{10}{}{{}}{{}}}
\bibcite{acoustic1}{{11}{}{{}}{{}}}
\bibcite{mechanics1}{{12}{}{{}}{{}}}
\bibcite{supervised_learning}{{13}{}{{}}{{}}}
\bibcite{demonstr_coupled_learning}{{14}{}{{}}{{}}}
\bibcite{Rene_IonicNeuromorphic}{{15}{}{{}}{{}}}
\bibcite{Rene_PressureSensitive}{{16}{}{{}}{{}}}
\bibcite{steepest_descent_book}{{17}{}{{}}{{}}}
\bibcite{voltage_controlled_oscillator}{{18}{}{{}}{{}}}
\bibcite{onchip_powerdistributed}{{19}{}{{}}{{}}}
\bibcite{big_neuralnet1}{{20}{}{{}}{{}}}
\bibcite{big_neuralnet2}{{21}{}{{}}{{}}}
\bibstyle{unsrt}
\providecommand\NAT@force@numbers{}\NAT@force@numbers
\HyPL@Entry{10<</P(\376\377\0001\0001)>>}
\@writefile{toc}{\contentsline {section}{\numberline {}References}{11}{section*.11}\protected@file@percent }
\newlabel{LastBibItem}{{21}{11}{}{section*.11}{}}
\newlabel{LastBibItem@cref}{{[appendix][1][2147483647]A}{[1][11][]11}}
\newlabel{LastPage}{{}{11}{}{}{}}
\gdef \@abspage@last{11}
