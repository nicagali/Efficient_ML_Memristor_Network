\relax 
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces \relax }}{1}{}\protected@file@percent }
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{fig:app_vd}{{1}{1}{}{}{}}
\newlabel{fig:app_vd@cref}{{[figure][1][]1}{[1][1][]1}}
\newlabel{eq:conduct}{{1}{1}{}{}{}}
\newlabel{eq:conduct@cref}{{[equation][1][]1}{[1][1][]1}}
\newlabel{eq:potentials}{{2}{1}{}{}{}}
\newlabel{eq:potentials@cref}{{[equation][2][]2}{[1][1][]1}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Relaxation towards steady-state when $g_{1,\infty }(V)=g_{2,\infty }(V)$.}}{2}{}\protected@file@percent }
\newlabel{fig:memristor_network}{{2}{2}{}{}{}}
\newlabel{fig:memristor_network@cref}{{[figure][2][]2}{[1][1][]2}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Relaxation towards steady-state when the system has been trained to give $V_2 = 4V$. The training sets the two different functional forms of $g_{\infty }$ seen in the right figure.}}{2}{}\protected@file@percent }
\newlabel{fig:memristor_network}{{3}{2}{}{}{}}
\newlabel{fig:memristor_network@cref}{{[figure][3][]3}{[1][1][]2}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces We consider the trained system in Figure 3, but we define the funtion $g_{1, \infty }$ such that it passes througth the steady-state point (triangle in Figure 3), not indicated with a red cross, but with a different functional form. Due to the different functinal form, the system reaches a steady-state that doesn't coincide with the desired in Figure 3.}}{3}{}\protected@file@percent }
\newlabel{fig:memristor_network}{{4}{3}{}{}{}}
\newlabel{fig:memristor_network@cref}{{[figure][4][]4}{[1][1][]3}}
\gdef \@abspage@last{3}
